<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:System="clr-namespace:System;assembly=mscorlib">
	<!--Colours-->
	<!--<SolidColorBrush x:Key="ExitButtonBackground">#FFFF1020</SolidColorBrush>-->
	<LinearGradientBrush x:Key="ExitButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFF1020"/>
		<GradientStop Color="#FF202020" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="TitleBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop  Color="#50909090"/>
		<GradientStop Color="#90000000" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TitleBarForeground">#FFFF0000</SolidColorBrush>

	<!--<SolidColorBrush x:Key="TitleBarBackgroundSpecator">#50FF2050</SolidColorBrush>-->
	<LinearGradientBrush x:Key="TitleBarBackgroundSpecator" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#50FF2050"/>
		<GradientStop Color="#90000000" Offset="1"/>
	</LinearGradientBrush>
	<!--<SolidColorBrush x:Key="TitleBarBackgroundEditor">#50909090</SolidColorBrush>-->
	<LinearGradientBrush x:Key="TitleBarBackgroundEditor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop  Color="#50909090"/>
		<GradientStop Color="#90000000" Offset="1"/>
	</LinearGradientBrush>
	<!--<SolidColorBrush x:Key="TitleBarBackgroundAdmin">#80000000</SolidColorBrush>-->
	<!--<SolidColorBrush x:Key="TitleBarBackgroundAdmin">#FFFFCC00</SolidColorBrush>-->
	<LinearGradientBrush x:Key="TitleBarBackgroundAdmin" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFFCC00"/>
		<GradientStop Color="#90000000" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TitleBarForegroundSpecator">#FFFF0000</SolidColorBrush>
	<SolidColorBrush x:Key="TitleBarForegroundEditor">#FF000000</SolidColorBrush>
	<!--<SolidColorBrush x:Key="TitleBarForegroundAdmin">#FFFFFFFF</SolidColorBrush>-->
	<SolidColorBrush x:Key="TitleBarForegroundAdmin">#FFFF0000</SolidColorBrush>

	<SolidColorBrush x:Key="TopColorTest">#FFFF8850</SolidColorBrush>
	<SolidColorBrush x:Key="TopColorCalibration">#FF5088FF</SolidColorBrush>
	<SolidColorBrush x:Key="TopColorConfig">#FFC59AFF</SolidColorBrush>
	<SolidColorBrush x:Key="TopColorFiles">#FFFF88FF</SolidColorBrush>
	<!--<SolidColorBrush x:Key="TopColorTest">#FF88AA20</SolidColorBrush>-->

	<SolidColorBrush x:Key="BackgroundColor">#FFFFEEDD</SolidColorBrush>

	<SolidColorBrush x:Key="ExpanderData">#FFFFEEAA</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderTests">#FF9EC0FF</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderFiles">#FF9EC000</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderCommands">#FF99FFAA</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderConfig">#FFAAEEFF</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderEcdis">#FFFFAAEE</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderTimeOfDay">#FF7CCF7E</SolidColorBrush>
	<SolidColorBrush x:Key="ExpanderCalibrationSettings">#FFEBFD89</SolidColorBrush>

	<SolidColorBrush x:Key="BorderBackground">#FFF0F0FA</SolidColorBrush>
	<SolidColorBrush x:Key="BorderBrush">#AAF0F0FA</SolidColorBrush>

	<SolidColorBrush x:Key="TabActiveBorderBrush">#FFFFFFFF</SolidColorBrush>
	<SolidColorBrush x:Key="TabNotActiveBorderBrush">#FFFFFFFF</SolidColorBrush>
	<SolidColorBrush x:Key="TabActiveBackground">#AA00FF55</SolidColorBrush>
	<SolidColorBrush x:Key="TabNotActiveBackground">#55EEEEEE</SolidColorBrush>

	<SolidColorBrush x:Key="LightText">#FFFFFFFF</SolidColorBrush>

	<SolidColorBrush x:Key="ComboBoxContentBackground">#FFDDDDDD</SolidColorBrush>
	<SolidColorBrush x:Key="ComboBoxNormalBorderBrush">#E3E9EF</SolidColorBrush>
	<SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush">#77FFFFFF</SolidColorBrush>
	<SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush">#FF888888</SolidColorBrush>
	<SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush">#FFEEEEEE</SolidColorBrush>
	<SolidColorBrush x:Key="ComboBoxDisabledBorderBrush">#FF888888</SolidColorBrush>

	<SolidColorBrush x:Key="TextBoxBorderBrush">#20000000</SolidColorBrush>
	<SolidColorBrush x:Key="TextBoxBackground">#55FFFFFF</SolidColorBrush>

	<SolidColorBrush x:Key="ListBoxTestBackground">#A0FFFFFF</SolidColorBrush>

	<SolidColorBrush x:Key="GridSplitterLines">#20000000</SolidColorBrush>
	<SolidColorBrush x:Key="GridSplitterFill">#40FFFFFF</SolidColorBrush>
	<SolidColorBrush x:Key="GridSplitterBorderBrush">#10909090</SolidColorBrush>

	<!--<FontFamily x:Key="SystemFont">/ISIC SB15 Programmer;component/Resources/#Input Mono</FontFamily>-->
	<FontFamily x:Key="SystemFont">Calibri</FontFamily>
	<!--<FontFamily x:Key="CodeFont">/ISIC SB15 Programmer;component/Resources/#Input Mono</FontFamily>-->
	<FontFamily x:Key="CodeFont">Consolas</FontFamily>

	<LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
		<GradientStop Color="#22000000" Offset="0" />
		<GradientStop Color="#44000000" Offset="0.4" />
		<GradientStop Color="#55000000" Offset="0.6" />
		<GradientStop Color="#33000000" Offset="0.9" />
		<GradientStop Color="#22000000" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="TextBoxGradiantBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#77000000" Offset="0" />
		<GradientStop Color="#10000000" Offset="0.02" />
		<GradientStop Color="#00000000" Offset="0.4" />
		<GradientStop Color="#00000000" Offset="0.6" />
		<GradientStop Color="#05000000" Offset="0.98" />
		<GradientStop Color="#55000000" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="TopShadowGradiantBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#77000000" Offset="0" />
		<GradientStop Color="#22000000" Offset="0.05" />
		<GradientStop Color="#00000000" Offset="0.2" />
		<GradientStop Color="#00000000" Offset="1" />
	</LinearGradientBrush>

	<!--SystemColors change-->
	<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}">#20000000</SolidColorBrush>
	<!--<LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#C000" Offset="0" />
		<GradientStop Color="#C500" Offset="0.05" />
		<GradientStop Color="#C500" Offset="0.2" />
		<GradientStop Color="#C000" Offset="1" />
	</LinearGradientBrush>-->
	<!--Button-->
	<Style x:Key="StyleButton" TargetType="Button">
		<Setter Property="Margin" Value="0,2,5,0" />
		<Setter Property="Foreground" Value="#FF222222"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.8">
					<GradientStop Color="#99AAAAAA" Offset="0.51"/>
					<GradientStop Color="#99AAAAAA" Offset="0.484"/>
					<GradientStop Color="#99999999" Offset="1"/>
					<!--<GradientStop Color="#999999" Offset="0.51"/>
						<GradientStop Color="#AAAAAA" Offset="0.484"/>
						<GradientStop Color="#EEEEEE" Offset="1"/>
						<GradientStop Color="#555555" Offset="0.497"/>-->
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="MinWidth" Value="20"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle Stroke="{TemplateBinding BorderBrush}" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}"/>
						<Rectangle VerticalAlignment="Top" Height="10" Margin="1,1,1,1" RadiusX="4" RadiusY="4">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#32FFFFFF" Offset="1"/>
									<GradientStop Color="#B2FFFFFF" Offset="0"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="rectangle" RadiusX="15" RadiusY="15" Fill="White" Margin="1" Opacity="0"/>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Margin="{TemplateBinding Padding}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="rectangle" Value="0.2"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="rectangle" Value="0.3"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="rectangle" Value="#FFFFFFFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.6"/>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" BasedOn="{StaticResource StyleButton}">
	</Style>


	<!--ToggleButton-->
	<!--<Style TargetType="ToggleButton">
			<Setter Property="Margin" Value="0,2,5,0" />
			<Setter Property="Foreground" Value="#FF222222"/>
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.8">
						<GradientStop Color="#999999" Offset="0.51"/>
						<GradientStop Color="#AAAAAA" Offset="0.484"/>
						<GradientStop Color="#EEEEEE" Offset="1"/>
						<GradientStop Color="#555555" Offset="0.497"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Margin" Value="1"/>
			<Setter Property="Height" Value="22"/>
			<Setter Property="Width" Value="70" />
			<Setter Property="MinWidth" Value="20"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid>
							<Rectangle Stroke="{TemplateBinding BorderBrush}" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}"/>
							<Rectangle VerticalAlignment="Top" Height="10" Margin="7,2,7,1" RadiusX="10" RadiusY="10">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#11FFFFFF" Offset="1"/>
										<GradientStop Color="#B2FFFFFF" Offset="0"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle x:Name="rectangle" RadiusX="15" RadiusY="15" Fill="White" Margin="1" Opacity="0"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Margin="{TemplateBinding Padding}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" TargetName="rectangle" Value="0.2"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Opacity" TargetName="rectangle" Value="0.3"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Fill" TargetName="rectangle" Value="#FFFFFFFF"/>
								<Setter Property="Opacity" TargetName="rectangle" Value="0.6"/>
								<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->

	<SolidColorBrush x:Key="ToggleButtonBorderBrush">LightGray</SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonBorderBackground">#FF000000</SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonThumbBackground"></SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonOnForeColor">#FF37FDFC</SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonOffForeColor">Gray</SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonInactiveOnForeColor">Red</SolidColorBrush>
	<SolidColorBrush x:Key="ToggleButtonInactiveOffForeColor">LightGray</SolidColorBrush>
	<Color x:Key="ToggleButtonThumbGlowStart">#FF37FDFC</Color>
	<Color x:Key="ToggleButtonThumbGlowEnd">#44006400</Color>
	<Color x:Key="ToggleButtonThumbShineStart">#99FFFFFF</Color>
	<Color x:Key="ToggleButtonThumbShineEnd">#33FFFFFF</Color>

	<Storyboard x:Key="ToggleButtonGlowFadeIn">
		<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
			<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>
	<Storyboard x:Key="ToggleButtonGlowFadeOut">
		<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
			<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Style TargetType="ToggleButton" x:Key="ToggleSwitchStyle">
		<Setter Property="Height" Value="22" />
		<Setter Property="Width" Value="75" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid MinWidth="36" MinHeight="15" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
						<Grid.Resources>
							<Style TargetType="TextBlock">
								<Setter Property="HorizontalAlignment" Value="Center" />
								<Setter Property="VerticalAlignment" Value="Center" />
								<Setter Property="FontFamily" Value="Arial" />
								<Setter Property="FontSize" Value="9" />
								<Setter Property="Margin" Value="0, 1, 0, 0" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border Grid.ColumnSpan="2" BorderBrush="{StaticResource ToggleButtonBorderBrush}" Background="{StaticResource ToggleButtonBorderBackground}" Opacity="0.8" CornerRadius="6" BorderThickness="1"></Border>
						<TextBlock x:Name="OnText" Grid.Column="0" HorizontalAlignment="Center" Text="ON" Foreground="{StaticResource ToggleButtonOnForeColor}" />
						<TextBlock x:Name="OffText" Grid.Column="1" HorizontalAlignment="Center" Text="OFF" FontWeight="Light" Foreground="{StaticResource ToggleButtonOffForeColor}" />
						<Border Name="Thumb" Grid.Column="0" BorderBrush="Transparent" Margin="3" CornerRadius="4" Background="#FF555555">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.5*" />
									<RowDefinition Height="0.5*" />
								</Grid.RowDefinitions>
								<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="Glow" Width="Auto" Grid.RowSpan="2" CornerRadius="5">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform ScaleX="1.702" ScaleY="2.743" />
													<SkewTransform AngleX="0" AngleY="0" />
													<RotateTransform Angle="0" />
													<TranslateTransform X="-0.368" Y="-0.152" />
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="{StaticResource ToggleButtonThumbGlowStart}" Offset="0" />
											<GradientStop Color="{StaticResource ToggleButtonThumbGlowEnd}" Offset="0.75" />
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<Border HorizontalAlignment="Stretch" x:Name="shine" CornerRadius="5,5,10,10">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
											<GradientStop Color="{StaticResource ToggleButtonThumbShineStart}" Offset="0" />
											<GradientStop Color="{StaticResource ToggleButtonThumbShineEnd}" Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="UIElement.MouseEnter">
							<BeginStoryboard Storyboard="{StaticResource ToggleButtonGlowFadeIn}" />
						</EventTrigger>
						<EventTrigger RoutedEvent="UIElement.MouseLeave">
							<BeginStoryboard Storyboard="{StaticResource ToggleButtonGlowFadeOut}" />
						</EventTrigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="Thumb" Property="Grid.Column" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" />
							<Setter TargetName="OnText" Property="Foreground" Value="{DynamicResource ToggleButtonInactiveOnForeColor}" />
							<Setter TargetName="OffText" Property="Foreground" Value="{DynamicResource ToggleButtonInactiveOffForeColor}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="shine" Value="0.6" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!--CheckBox-->
	<Style TargetType="CheckBox" x:Key="StyleCheckBoxHex">
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<!--ComboBox-->
	<ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="2" Name="Border" BorderBrush="{StaticResource TextBoxBorderBrush}" CornerRadius="8, 8, 0, 0" BorderThickness="1, 0, 1, 0" Background="{StaticResource ComboBoxNormalBackgroundBrush}">
				<Border Background="{StaticResource TextBoxGradiantBrush}" CornerRadius="8, 8, 0, 0" />
			</Border>
			<!--Background="{StaticResource ComboBoxNormalBackgroundBrush}">-->


			<Border Grid.Column="1" Margin="1, 1, 1, 1" Name="ButtonBorder" CornerRadius="0, 8, 0, 0" BorderThickness="1, 0, 0, 0" BorderBrush="LightGray" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

			<Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="#444" VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ComboBoxFlatStyle"  TargetType="ComboBox">
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Height" Value="22" />
		<Setter Property="FontFamily" Value="Lucida Console" />
		<Setter Property="Padding" Value="3, 4, 3, 0" />
		<Setter Property="Margin" Value="10,2,10,0" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

						<ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox" Margin="5, 2, 23, 0" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="DropDownBorder" Background="{StaticResource ComboBoxContentBackground}" Margin="0, 0, 0, 0" CornerRadius="0, 0, 8, 8" BorderThickness="1,1,1,1" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxFlatStyle}">
		<!--<Setter Property="Height" Value="22" />-->
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<!--<Setter Property="Margin" Value="10, 0, 10, 0" />-->
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<!--<Setter Property="IsReadOnly" Value="True" />
			<Setter Property="IsEditable" Value="True" />-->
	</Style>

	<!--Expander-->
	<Style TargetType="Expander">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="IsTabStop" Value="False" />
	</Style>

	<!--GroupBox-->
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
	<Style TargetType="GroupBox">
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{StaticResource LightText}" />
		<Setter Property="Margin" Value="5, 0, 0, 0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="2" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="6" />
						</Grid.RowDefinitions>
						<Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
						<Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
							<ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="9">
							<Border.OpacityMask>
								<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
									<Binding ElementName="Header" Path="ActualWidth" />
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Storyboard x:Key="StoryBoardSlideIn">
		<MatrixAnimationUsingPath 
								Storyboard.TargetName="btnExitSlideIn"
								Storyboard.TargetProperty="RenderTransform.(MatrixTransform.Matrix)"
								Duration="0:0:0.05">
			<MatrixAnimationUsingPath.PathGeometry>
				<PathGeometry Figures="M0,0 l-17,17" />
			</MatrixAnimationUsingPath.PathGeometry>
		</MatrixAnimationUsingPath>
	</Storyboard>
	<Storyboard x:Key="StoryBoardSlideOut">
		<MatrixAnimationUsingPath Storyboard.TargetName="btnExitSlideIn"
									  Storyboard.TargetProperty="RenderTransform.(MatrixTransform.Matrix)"
									  Duration="0:0:0.1">
			<MatrixAnimationUsingPath.PathGeometry>
				<PathGeometry Figures="M-17,17 l17,-17" />
			</MatrixAnimationUsingPath.PathGeometry>
		</MatrixAnimationUsingPath>
	</Storyboard>

	<!--Grid-->
	<Style TargetType="Grid" x:Key="ButtonExit">
		<Setter Property="Visibility" Value="Visible" />
	</Style>

	<!-- Gridsplitter -->
	<Style x:Key="GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="#800000FF"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="GridSplitterVerticalBase" TargetType="{x:Type GridSplitter}">
		<Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
			<Canvas RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"
                                Height="6" VerticalAlignment="Center"
                                Width="5" HorizontalAlignment="Center">
				<Path Stroke="{StaticResource GridSplitterLines}" StrokeThickness="1" Data="M1,-25 v50"/>
				<Path Stroke="{StaticResource GridSplitterLines}" StrokeThickness="1" Data="M4,-25 v50"/>
				<!--<Path Stroke="{StaticResource GridSplitterFill}" StrokeThickness="0" Data="M6,0 l1,-1 l1,1 v50 l-1,1 l-1,-1 v-50"/>-->
				<!--<Path Stroke="{StaticResource GridSplitterFill}" Fill="Red" StrokeThickness="1" Data="M6,0 v50 h1 v-50 h-1"/>-->
			</Canvas>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="GridSplitterHorizontalBase" TargetType="{x:Type GridSplitter}">
		<Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
			<Canvas RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"
                                Height="5" VerticalAlignment="Center"
                                Width="6" HorizontalAlignment="Center">
				<Path Stroke="{StaticResource GridSplitterLines}" StrokeThickness="1" Data="M-25,1 h50"/>
				<Path Stroke="{StaticResource GridSplitterLines}" StrokeThickness="1" Data="M-25,4 h50"/>
				<!--<Path Stroke="{StaticResource GridSplitterFill}" StrokeThickness="0" Data="M6,0 l1,-1 l1,1 v50 l-1,1 l-1,-1 v-50"/>-->
				<!--<Path Stroke="{StaticResource GridSplitterFill}" Fill="Red" StrokeThickness="1" Data="M6,0 v50 h1 v-50 h-1"/>-->
			</Canvas>
		</Border>
	</ControlTemplate>
	<Style x:Key="GridSplitterBase" TargetType="{x:Type GridSplitter}">
		<Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
		<Setter Property="Background" Value="{DynamicResource GridSplitterFill}"/>
		<Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
		<Setter Property="Template" Value="{StaticResource GridSplitterVerticalBase}" />
	</Style>
	<Style x:Key="GridSplitterVerticalStyle" TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource GridSplitterBase}">
		<Setter Property="Template" Value="{StaticResource GridSplitterVerticalBase}" />
	</Style>
	<Style x:Key="GridSplitterHorizontalStyle" TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource GridSplitterBase}">
		<Setter Property="Template" Value="{StaticResource GridSplitterHorizontalBase}" />
	</Style>

	<!--Label-->
	<Style TargetType="Label">
		<Setter Property="FontSize" Value="70" />
	</Style>

	<!--<Style TargetType="{x:Type Label}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="Margin" Value="10, 0, 1, 3" />
		<Setter Property="TextElement.FontFamily" Value="{StaticResource SystemFont}" />
	</Style>-->
	<Style x:Key="styleCode" TargetType="Label">
		<Setter Property="FontFamily" Value="{StaticResource CodeFont}" />
	</Style>
	
	<!--ListBox-->
	<Style TargetType="ListBox">
	</Style>

	<!--ListBoxItem-->
	<Style x:Key="ListBoxItemBase" TargetType="ListBoxItem">
		<Setter Property="FontSize" Value="15" />
		<Setter Property="FontWeight" Value="Black" />
	</Style>

	<!--ListView-->
	<Style x:Key="ListViewBase" TargetType="ListView">
	</Style>

	<!--PasswordBox-->
	<ControlTemplate x:Key="PasswordBoxBaseControlTemplate" TargetType="PasswordBox">
		<Border x:Name="Bd" 
					BorderBrush="{TemplateBinding BorderBrush}"
					Background="{TemplateBinding Background}" 
					BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" ClipToBounds="True">
			<Grid>
				<Border ClipToBounds="False" CornerRadius="5" BorderThickness="0" Background="{StaticResource TextBoxGradiantBrush}" />
				<ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" Margin="0, 2, 0, 0"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
			<Trigger Property="Width" Value="Auto">
				<Setter Property="MinWidth" Value="23"/>
			</Trigger>
			<Trigger Property="Height" Value="Auto">
				<Setter Property="MinHeight" Value="20"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="PasswordBox" x:Key="StylePasswordBoxBase" x:Name="StylePasswordBoxBase" >
		<!--<Setter Property="Foreground" Value="{Binding ElementName=ColorPlaceHolder, Path=Foreground, Mode=OneWay}" />-->
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="1, 0, 1, 0" />
		<Setter Property="Height" Value="22" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="FontFamily" Value="Lucida Console" />
		<Setter Property="Padding" Value="3, 4, 3, 0" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Template" Value="{StaticResource PasswordBoxBaseControlTemplate}" />
	</Style>

	<!--TabItem-->
	<Style x:Key="TabItemPresenterBase" TargetType="ContentPresenter">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="12,2,12,2" />
		<Setter Property="RecognizesAccessKey" Value="True" />
	</Style>
	<Style x:Key="TabItemBorderBase" TargetType="Border">
		<Setter Property="Margin" Value="0, 0, 5, 0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="10, 5, 0, 0" />
	</Style>
	<ControlTemplate x:Key="TabItemBase" TargetType="{x:Type TabItem}">
		<Grid>
			<!--<Canvas Margin="0, 0, 5, 0" Width="130" Height="25">
					<Path Name="Border" Fill="Yellow" Data="M0,25 v-10 l5,-15 h100 l5,15 v10 Z" Stroke="LightGray" StrokeThickness="1" />
					<ContentPresenter Name="ContentSite" ContentSource="Header" Style="{StaticResource TabItemPresenterBase}">
						<ContentPresenter.LayoutTransform>
							<RotateTransform Angle="0" />
						</ContentPresenter.LayoutTransform>
					</ContentPresenter>
				</Canvas>-->
			<Border Name="Border" Style="{StaticResource TabItemBorderBase}">
				<ContentPresenter Name="ContentSite" ContentSource="Header" Style="{StaticResource TabItemPresenterBase}">
					<ContentPresenter.LayoutTransform>
						<RotateTransform Angle="0" />
					</ContentPresenter.LayoutTransform>
				</ContentPresenter>
			</Border>
		</Grid>
		<!--<ControlTemplate.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter TargetName="Border" Property="Fill" Value="{DynamicResource TabActiveBackground}" />
				</Trigger>
				<Trigger Property="IsSelected" Value="False">
					<Setter TargetName="Border" Property="Fill" Value="{StaticResource TabNotActiveBackground}" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Fill" Value="DarkGray" />
					<Setter Property="Foreground" Value="DarkGray" />
				</Trigger>
			</ControlTemplate.Triggers>-->
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource TabActiveBackground}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabActiveBorderBrush}" />
				<Setter TargetName="Border" Property="BorderThickness" Value="1, 4, 1, 0" />
			</Trigger>
			<Trigger Property="IsSelected" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource TabNotActiveBackground}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabNotActiveBorderBrush}" />
				<Setter TargetName="Border" Property="BorderThickness" Value="1, 1, 1, 0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Border" Property="Background" Value="DarkGray" />
				<Setter TargetName="Border" Property="BorderBrush" Value="Black" />
				<Setter Property="Foreground" Value="DarkGray" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="TabItemBaseStyle" TargetType="TabItem">
		<Setter Property="Template" Value="{StaticResource TabItemBase}" />
		<Setter Property="IsTabStop" Value="False" />
	</Style>

	<!--TextBox-->
	<ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="TextBoxBase">
		<Border x:Name="Bd" 
					BorderBrush="{TemplateBinding BorderBrush}"
					Background="{TemplateBinding Background}" 
					BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" ClipToBounds="True">
			<Grid>
				<Border ClipToBounds="False" CornerRadius="5" BorderThickness="0" Background="{StaticResource TextBoxGradiantBrush}" />
				<ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" Margin="0, 2, 0, 0"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
			<Trigger Property="Width" Value="Auto">
				<Setter Property="MinWidth" Value="23"/>
			</Trigger>
			<Trigger Property="Height" Value="Auto">
				<Setter Property="MinHeight" Value="20"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--<ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="TextBoxBase">
			<Border x:Name="Bd" 
					BorderBrush="{StaticResource TextBoxBorderBrush}"
					Background="{TemplateBinding Background}" 
					BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8">
				<ScrollViewer x:Name="PART_ContentHost"/>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				</Trigger>
				<Trigger Property="Width" Value="Auto">
					<Setter Property="MinWidth" Value="23"/>
				</Trigger>
				<Trigger Property="Height" Value="Auto">
					<Setter Property="MinHeight" Value="20"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>-->
	<Style TargetType="TextBox" x:Key="StyleTextBoxBase" x:Name="StyleTextBoxBase" >
		<!--<Setter Property="Foreground" Value="{Binding ElementName=ColorPlaceHolder, Path=Foreground, Mode=OneWay}" />-->
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderThickness" Value="1, 0, 1, 0" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="Height" Value="22" />
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<!--<Setter Property="Grid.Column" Value="1" />-->
		<Setter Property="FontFamily" Value="Lucida Console" />
		<Setter Property="Padding" Value="3, 4, 3, 0" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Template" Value="{StaticResource TextBoxBaseControlTemplate}" />
	</Style>

	<Style TargetType="{x:Type TextBox}" x:Name="StyleTextBoxRoundedCornersFlat">
		<!--<Setter Property="Foreground" Value="{Binding ElementName=ColorPlaceHolder, Path=Foreground, Mode=OneWay}" />
			<Setter Property="Background" Value="{Binding ElementName=ColorPlaceHolder, Path=Background, Mode=OneWay}" />-->
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="21" />
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="FontFamily" Value="{StaticResource CodeFont}" />
		<!--<Setter Property="FontFamily" Value="Pack://ISIC SB15 Programmer:,,,/Resources/#InputMono" />-->
		<Setter Property="Padding" Value="3, 2, 3, 0" />
		<Setter Property="Margin" Value="0,0,10,0" />
		<Setter Property="IsReadOnly" Value="True" />
		<Setter Property="Template" Value="{StaticResource TextBoxBaseControlTemplate}" />
	</Style>

	<!--TextBlock-->
	<Style TargetType="TextBlock" x:Key="StyleTextBlockTimeOfDay">
		<Setter Property="VerticalAlignment" Value="Center" />
		<!--<Setter Property="Foreground" Value="{Binding ElementName=ColorPlaceHolder, Path=Foreground, Mode=OneWay}" />-->
		<Setter Property="Margin" Value="5, 0, 0, 0" />
		<Setter Property="FontFamily" Value="{StaticResource SystemFont}" />
	</Style>

	<!--Border-->
	<Style TargetType="Border" x:Key="StyleBorderOuterMain">
		<!-- CornerRadius="5" BorderThickness="0" BorderBrush="LightBlue" Background="#FFF0F0FA" -->
		<Setter Property="CornerRadius" Value="5" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="LightBlue" />
		<Setter Property="Background" Value="{StaticResource BorderBackground}" />
	</Style>
	<Style TargetType="Border" x:Key="StyleBorderTimeOfDay">
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
		<Setter Property="CornerRadius" Value="5" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Margin" Value="10" />
	</Style>

















	<Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Background" Value="{StaticResource BorderBackground}" />
		<Setter Property="CornerRadius" Value="5" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
	</Style>
	<Style x:Key="styleLblTbOffset" TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="0, 4, 0, 0" />
	</Style>

	<Style x:Key="styleLblAllignTest" TargetType="{x:Type TextBlock}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0, 0, 10, 0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<!--<Style TargetType="{x:Type StatusBar}">
		<Setter Property="Background" Value="{StaticResource StatusBarBackground}" />
		<Setter Property="Margin" Value="10, 0, 0, 0" />
	</Style>-->

</ResourceDictionary>